<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yanxin.dao.CompanyMapper" >
  <resultMap id="BaseResultMap" type="com.yanxin.domain.Company" >
    <id column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="company_address" property="companyAddress" jdbcType="VARCHAR" />
    <result column="business_license" property="businessLicense" jdbcType="VARCHAR" />
    <result column="id_cardPositive" property="idCardpositive" jdbcType="VARCHAR" />
    <result column="id_cardOtherside" property="idCardotherside" jdbcType="VARCHAR" />
    <result column="weixin_payAccount" property="weixinPayaccount" jdbcType="VARCHAR" />
    <result column="ali_payAccount" property="aliPayaccount" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    company_id, company_name, company_address, business_license, id_cardPositive, id_cardOtherside, 
    weixin_payAccount, ali_payAccount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yanxin.domain.CompanyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from companys
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from companys
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from companys
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yanxin.domain.CompanyExample" >
    delete from companys
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yanxin.domain.Company" >
    insert into companys (company_id, company_name, company_address, 
      business_license, id_cardPositive, id_cardOtherside, 
      weixin_payAccount, ali_payAccount)
    values (#{companyId,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, #{companyAddress,jdbcType=VARCHAR}, 
      #{businessLicense,jdbcType=VARCHAR}, #{idCardpositive,jdbcType=VARCHAR}, #{idCardotherside,jdbcType=VARCHAR}, 
      #{weixinPayaccount,jdbcType=VARCHAR}, #{aliPayaccount,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yanxin.domain.Company" >
    insert into companys
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="companyAddress != null" >
        company_address,
      </if>
      <if test="businessLicense != null" >
        business_license,
      </if>
      <if test="idCardpositive != null" >
        id_cardPositive,
      </if>
      <if test="idCardotherside != null" >
        id_cardOtherside,
      </if>
      <if test="weixinPayaccount != null" >
        weixin_payAccount,
      </if>
      <if test="aliPayaccount != null" >
        ali_payAccount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyAddress != null" >
        #{companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null" >
        #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="idCardpositive != null" >
        #{idCardpositive,jdbcType=VARCHAR},
      </if>
      <if test="idCardotherside != null" >
        #{idCardotherside,jdbcType=VARCHAR},
      </if>
      <if test="weixinPayaccount != null" >
        #{weixinPayaccount,jdbcType=VARCHAR},
      </if>
      <if test="aliPayaccount != null" >
        #{aliPayaccount,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yanxin.domain.CompanyExample" resultType="java.lang.Integer" >
    select count(*) from companys
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update companys
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyAddress != null" >
        company_address = #{record.companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.businessLicense != null" >
        business_license = #{record.businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardpositive != null" >
        id_cardPositive = #{record.idCardpositive,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardotherside != null" >
        id_cardOtherside = #{record.idCardotherside,jdbcType=VARCHAR},
      </if>
      <if test="record.weixinPayaccount != null" >
        weixin_payAccount = #{record.weixinPayaccount,jdbcType=VARCHAR},
      </if>
      <if test="record.aliPayaccount != null" >
        ali_payAccount = #{record.aliPayaccount,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update companys
    set company_id = #{record.companyId,jdbcType=INTEGER},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      company_address = #{record.companyAddress,jdbcType=VARCHAR},
      business_license = #{record.businessLicense,jdbcType=VARCHAR},
      id_cardPositive = #{record.idCardpositive,jdbcType=VARCHAR},
      id_cardOtherside = #{record.idCardotherside,jdbcType=VARCHAR},
      weixin_payAccount = #{record.weixinPayaccount,jdbcType=VARCHAR},
      ali_payAccount = #{record.aliPayaccount,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yanxin.domain.Company" >
    update companys
    <set >
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyAddress != null" >
        company_address = #{companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null" >
        business_license = #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="idCardpositive != null" >
        id_cardPositive = #{idCardpositive,jdbcType=VARCHAR},
      </if>
      <if test="idCardotherside != null" >
        id_cardOtherside = #{idCardotherside,jdbcType=VARCHAR},
      </if>
      <if test="weixinPayaccount != null" >
        weixin_payAccount = #{weixinPayaccount,jdbcType=VARCHAR},
      </if>
      <if test="aliPayaccount != null" >
        ali_payAccount = #{aliPayaccount,jdbcType=VARCHAR},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yanxin.domain.Company" >
    update companys
    set company_name = #{companyName,jdbcType=VARCHAR},
      company_address = #{companyAddress,jdbcType=VARCHAR},
      business_license = #{businessLicense,jdbcType=VARCHAR},
      id_cardPositive = #{idCardpositive,jdbcType=VARCHAR},
      id_cardOtherside = #{idCardotherside,jdbcType=VARCHAR},
      weixin_payAccount = #{weixinPayaccount,jdbcType=VARCHAR},
      ali_payAccount = #{aliPayaccount,jdbcType=VARCHAR}
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
</mapper>